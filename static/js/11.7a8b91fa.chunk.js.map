{"version":3,"sources":["pages/Register.js"],"names":["Wrapper","styled","div","Header","h1","P","p","layout","labelCol","span","wrapperCol","tailLayout","offset","Register","history","useHistory","AuthStore","useStores","validates","username","rule","value","length","Promise","reject","test","resolve","password","name","initialValues","remember","onFinish","values","setUsername","setPassword","register","then","push","catch","console","log","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","Password","getFieldValue","onClick","type","htmlType"],"mappings":"muBAMA,IAAMA,EAAUC,IAAOC,IAAV,KAQPC,EAASF,IAAOG,GAAV,KAINC,EAAIJ,IAAOK,EAAV,KAYDC,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAa,CACjBD,WAAY,CACVE,OAAQ,GACRH,KAAM,KAgHKI,UA5GE,WACf,IAAMC,EAAUC,cACRC,EAAcC,cAAdD,UAoBFE,EAAY,CAChBC,SAAU,SAACC,EAAKC,GACd,OAAGA,EAAMC,OAAS,GAAKD,EAAMC,OAAS,GAAWC,QAAQC,OAAO,0EAC3D,kBAAkBC,KAAKJ,GACrBE,QAAQG,UAD6BH,QAAQC,OAAO,2GAG7DG,SAAU,SAACP,EAAMC,GACf,OAAGA,EAAMC,OAAS,EAAUC,QAAQC,OAAO,+CACxCH,EAAMC,OAAS,GAAWC,QAAQC,OAAO,gDACrCD,QAAQG,YAYnB,OACE,eAAC1B,EAAD,WACE,cAACG,EAAD,2BACA,eAAC,IAAD,2BACMI,GADN,IAEEqB,KAAK,QACLC,cAAe,CACbC,UAAU,GAEZC,SA9CW,SAACC,GAChBhB,EAAUiB,YAAYD,EAAOb,UAC7BH,EAAUkB,YAAYF,EAAOL,UAC7BX,EAAUmB,WACPC,MAAK,WACJtB,EAAQuB,KAAK,aAEdC,OAAM,WACLC,QAAQC,IAAI,oEAuCZC,eAnCiB,SAACC,GACtBH,QAAQC,IAAI,UAAWE,IA2BrB,UASE,cAAC,IAAKC,KAAN,CACEC,MAAM,qBACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,8CAEX,CAACC,UAAW9B,EAAUC,WAR1B,SAWE,cAAC,IAAD,MAGF,cAAC,IAAKwB,KAAN,CACEC,MAAM,eACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wCAEX,CAACC,UAAW9B,EAAUS,WAR1B,SAWE,cAAC,IAAMsB,SAAP,MAGF,cAAC,IAAKN,KAAN,CACEC,MAAM,2BACNhB,KAAK,kBACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,oDAtDG,SAAC,GAAD,IAAEG,EAAF,EAAEA,cAAF,MAAsB,CAC5CF,UAD4C,SAClC5B,EAAKC,GACb,OAAG6B,EAAc,cAAgB7B,EAAcE,QAAQG,UAChDH,QAAQC,OAAO,8DA6CpB,SAWE,cAAC,IAAMyB,SAAP,MAEF,eAAC5C,EAAD,kDAAS,wBAAQ8C,QA7FH,WAClBrC,EAAQuB,KAAK,WA4FA,6BAET,cAAC,IAAKM,KAAN,2BAAehC,GAAf,aACE,cAAC,IAAD,CAAQyC,KAAK,UAAUC,SAAS,SAAhC","file":"static/js/11.7a8b91fa.chunk.js","sourcesContent":["import React from 'react'\r\nimport {useStores} from '../stores/index'\r\nimport {Form, Input, Button} from 'antd'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 600px;\r\n  margin: 30px auto;\r\n  box-shadow: 0 4px 14px 3px rgba(0,0,0,0.2);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  text-align: center;\r\n`;\r\n\r\nconst P = styled.p`\r\n  margin-left: 90px;\r\n  button {\r\n    border: none;\r\n    background: #fff;\r\n    color: #007bff;\r\n    outline: none;\r\n    cursor: pointer;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n}\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 11,\r\n    span: 13,\r\n  },\r\n}\r\n\r\nconst Register = () => {\r\n  const history = useHistory();\r\n  const { AuthStore } = useStores()\r\n  const handleLogin = () => {\r\n    history.push('/login')\r\n  }\r\n  const onFinish = (values) => {\r\n    AuthStore.setUsername(values.username)\r\n    AuthStore.setPassword(values.password)\r\n    AuthStore.register()\r\n      .then(()=>{\r\n        history.push('/login')\r\n      })\r\n      .catch(()=>{\r\n        console.log('注册失败，什么都不做')\r\n      })\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  const validates = {\r\n    username: (rule,value) => {\r\n      if(value.length < 4 || value.length > 12) return Promise.reject('用户名长度只能为4~12个字符');\r\n      if(!(/^[0-9a-zA-Z_]+$/.test(value))) return Promise.reject('用户名只能由数字、字母和下划线组成')\r\n      return Promise.resolve()\r\n    },\r\n    password: (rule, value) => {\r\n      if(value.length < 6) return Promise.reject('密码最小长度为6');\r\n      if(value.length > 16) return Promise.reject('密码最大长度为16');\r\n      return Promise.resolve()\r\n    }\r\n  }\r\n\r\n  const validateConfirm = ({getFieldValue}) => ({\r\n    validator(rule,value){\r\n      if(getFieldValue('password') === value) return Promise.resolve();\r\n      return Promise.reject('两次输入密码不一致')\r\n    }\r\n  })\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Header>注册</Header>\r\n      <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"用户名\"\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入用户名！',\r\n            },\r\n            {validator: validates.username}\r\n          ]}\r\n        >\r\n          <Input/>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"密码\"\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请输入密码！',\r\n            },\r\n            {validator: validates.password}\r\n          ]}\r\n        >\r\n          <Input.Password/>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"确认密码\"\r\n          name=\"confirmPassword\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: '请再次输入密码！',\r\n            },\r\n            validateConfirm\r\n          ]}\r\n        >\r\n          <Input.Password/>\r\n        </Form.Item>\r\n        <P>已经有账号？<button onClick={handleLogin}>登录</button></P>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Register"],"sourceRoot":""}